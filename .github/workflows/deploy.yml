name: Deploy to AWS EC2
on:
  push:
    branches: [ "week5" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Set explicit timeout
    
    steps:
    - name: Check SSH connection
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_IP_ADDRESS }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 60s
        script: echo "SSH connection successful"
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 3.16.13.9
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        command_timeout: 10m
        script: |
          set -e  # Exit on error
          
          echo "Starting deployment at $(date)"
          
          # Check if directory exists
          if [ ! -d "/home/${{ secrets.EC2_USERNAME }}/aiops" ]; then
            echo "Directory does not exist"
            exit 1
          fi
          
          # Navigate to project directory with error checking
          cd /home/${{ secrets.EC2_USERNAME }}/aiops || {
            echo "Failed to change directory"
            exit 1
          }
          
          # Kill processes more safely
          for PROC in "python app.py" "streamlit run frontend.py"; do
            PID=$(pgrep -f "$PROC" || true)
            if [ ! -z "$PID" ]; then
              echo "Stopping $PROC (PID: $PID)"
              kill $PID || true
              sleep 2
              kill -9 $PID 2>/dev/null || true
            fi
          done
          
          # Pull latest code with error checking
          git fetch origin week5 || {
            echo "Git fetch failed"
            exit 1
          }
          git reset --hard origin/week5 || {
            echo "Git reset failed"
            exit 1
          }
          
          # Deploy backend
          cd backend || exit 1
          source venv/bin/activate || {
            echo "Failed to activate backend venv"
            exit 1
          }
          
          echo "Starting backend..."
          nohup python app.py > ../backend.log 2>&1 &
          BACKEND_PID=$!
          deactivate
          
          # Check if backend started
          sleep 5
          if ! ps -p $BACKEND_PID > /dev/null; then
            echo "Backend failed to start"
            cat ../backend.log
            exit 1
          fi
          
          # Deploy frontend
          cd ../frontend || exit 1
          source venv/bin/activate || {
            echo "Failed to activate frontend venv"
            exit 1
          }
          
          echo "Starting frontend..."
          nohup streamlit run frontend.py --server.address 0.0.0.0 --server.port 8501 > ../frontend.log 2>&1 &
          FRONTEND_PID=$!
          deactivate
          
          # Check if frontend started
          sleep 5
          if ! ps -p $FRONTEND_PID > /dev/null; then
            echo "Frontend failed to start"
            cat ../frontend.log
            exit 1
          fi
          
          # Final verification
          echo "Verifying processes..."
          ps aux | grep -e "python app.py" -e "streamlit run frontend.py"
          
          echo "Deployment completed at $(date)"
          exit 0
